<Window x:Class="CodeReview.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="CodeReview" Height="700" Width="700"
        WindowState="Maximized"
        WindowStyle="SingleBorderWindow"
        Icon="icon_code_check.ico"
        FontFamily="{Binding FontName}"
        FontSize="{Binding FontSize}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="95*"/>
            <RowDefinition Height="5*"/>
        </Grid.RowDefinitions>
        <DataGrid Grid.Row="0" AutoGenerateColumns="false"
              Name="IncidentDataGrid"
              HorizontalAlignment="Left"
              VerticalAlignment="Top" CanUserAddRows="False" IsReadOnly="True" SelectionMode="Extended">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>

                    <MenuItem Header="Difference" Command="{Binding FileDiff}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.InputBindings>
                <KeyBinding Key="d" Modifiers="Control" Command="{Binding FileDiff}" CommandParameter="{Binding ElementName=IncidentDataGrid, Path=SelectedItems}"/>
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=Filename}" Header="Filename" Width="30*"/>
                <DataGridTextColumn Binding="{Binding Path=CheckOutChangeSet}" Header="Checked Out" Width="5*"/>
                <DataGridTextColumn Binding="{Binding Path=CheckInChangeSet}" Header="Checked In" Width="5*" SortDirection="Descending"/>
                <DataGridTextColumn Binding="{Binding Path=DevBranch}" Header ="DevBranch" Width="5*"/>
                <DataGridTextColumn Binding="{Binding Path=Comments}" Header ="Comments" Width="45*">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Author}" Header="Author" Width="10*"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="1" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <!-- MinWidth="{Binding Width, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" -->
            <ComboBox Grid.Column="0" HorizontalAlignment="Left" 
                      Name="cmbxIncidentNo" Width="150"
                      Text="{Binding IncidentNo, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}" 
                      ItemsSource="{Binding IncidentNoCollection, Mode=OneWay, UpdateSourceTrigger=Propertychanged}"
                      IsEditable="True"
                      IsReadOnly="False"
                      IsEnabled="{Binding EnableComboBox, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                <ComboBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding GetIncident}"/>
                </ComboBox.InputBindings>
            </ComboBox>
            <ComboBox Grid.Column="2" HorizontalAlignment="Right" Width="{Binding Path=Width, RelativeSource={RelativeSource Self}}" MinWidth="100"
                      IsEditable="False" IsReadOnly="True" Name="cmbxFontFamily" ItemsSource="{Binding FontFamilyCollection}"
                      Text="{Binding FontName, Mode=OneWay}">
                    <ComboBox.InputBindings>
                        <KeyBinding Key="Return" Command="{Binding SetSelectedFont}" CommandParameter="{Binding ElementName=cmbxFontFamily,Path=SelectedItem}"/>
                    </ComboBox.InputBindings>
                </ComboBox>
            <TextBlock Grid.Column="3" MinWidth="20" Width="{Binding Path=Width, RelativeSource={RelativeSource Self}}">
                    <Label Content="Size :"/>
                    <TextBox Name="txtFontSize" Text="{Binding FontSize, Mode=TwoWay}" Height="{Binding ElementName=Self, Path=FontSize, Mode=OneWay}"/>
                <TextBlock.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding SetFontSize}" CommandParameter="{Binding ElementName=txtFontSize, Path=Text}"/>
                </TextBlock.InputBindings>
            </TextBlock>
            <TextBlock Grid.Column="4" HorizontalAlignment="Right">
                <Label Content="Association Count:"/>
                <TextBox Text="{Binding IncidentAssociationCount, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsReadOnly="True"/>
            </TextBlock>
        </Grid>
    </Grid>
</Window>